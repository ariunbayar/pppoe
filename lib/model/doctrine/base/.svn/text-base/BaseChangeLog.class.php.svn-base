<?php

/**
 * BaseChangeLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $object_id
 * @property string $object
 * @property string $description
 * @property integer $editor_id
 * @property Customer $Customer
 * @property District $District
 * @property User $User
 * @property User $Editor
 * 
 * @method integer   getObjectId()    Returns the current record's "object_id" value
 * @method string    getObject()      Returns the current record's "object" value
 * @method string    getDescription() Returns the current record's "description" value
 * @method integer   getEditorId()    Returns the current record's "editor_id" value
 * @method Customer  getCustomer()    Returns the current record's "Customer" value
 * @method District  getDistrict()    Returns the current record's "District" value
 * @method User      getUser()        Returns the current record's "User" value
 * @method User      getEditor()      Returns the current record's "Editor" value
 * @method ChangeLog setObjectId()    Sets the current record's "object_id" value
 * @method ChangeLog setObject()      Sets the current record's "object" value
 * @method ChangeLog setDescription() Sets the current record's "description" value
 * @method ChangeLog setEditorId()    Sets the current record's "editor_id" value
 * @method ChangeLog setCustomer()    Sets the current record's "Customer" value
 * @method ChangeLog setDistrict()    Sets the current record's "District" value
 * @method ChangeLog setUser()        Sets the current record's "User" value
 * @method ChangeLog setEditor()      Sets the current record's "Editor" value
 * 
 * @package    pppoe
 * @subpackage model
 * @author     Ariunbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChangeLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('change_log');
        $this->hasColumn('object_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('object', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('editor_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Customer', array(
             'local' => 'object_id',
             'foreign' => 'id'));

        $this->hasOne('District', array(
             'local' => 'object_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'object_id',
             'foreign' => 'id'));

        $this->hasOne('User as Editor', array(
             'local' => 'editor_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}