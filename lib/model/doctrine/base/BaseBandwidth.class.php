<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bandwidth', 'doctrine');

/**
 * BaseBandwidth
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bandwidth
 * @property string $ipaddress
 * @property Doctrine_Collection $Customers
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method integer             getBandwidth() Returns the current record's "bandwidth" value
 * @method string              getIpaddress() Returns the current record's "ipaddress" value
 * @method Doctrine_Collection getCustomers() Returns the current record's "Customers" collection
 * @method Bandwidth           setId()        Sets the current record's "id" value
 * @method Bandwidth           setBandwidth() Sets the current record's "bandwidth" value
 * @method Bandwidth           setIpaddress() Sets the current record's "ipaddress" value
 * @method Bandwidth           setCustomers() Sets the current record's "Customers" collection
 * 
 * @package    pppoe
 * @subpackage model
 * @author     Ariunbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBandwidth extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bandwidth');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('bandwidth', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ipaddress', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Customer as Customers', array(
             'local' => 'id',
             'foreign' => 'bandwidth_id'));
    }
}