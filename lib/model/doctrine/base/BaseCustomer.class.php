<?php

/**
 * BaseCustomer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $district_id
 * @property string $bair
 * @property string $toot
 * @property string $username
 * @property string $password
 * @property integer $bandwidth_id
 * @property string $description
 * @property integer $payment
 * @property boolean $is_blocked
 * @property integer $user_id
 * @property string $next_action
 * @property datetime $next_date
 * @property District $District
 * @property Bandwidth $Bandwidth
 * @property User $User
 * @property Doctrine_Collection $Phones
 * @property Doctrine_Collection $NextActions
 * @property Doctrine_Collection $ChangeLogs
 * 
 * @method string              getName()         Returns the current record's "name" value
 * @method integer             getDistrictId()   Returns the current record's "district_id" value
 * @method string              getBair()         Returns the current record's "bair" value
 * @method string              getToot()         Returns the current record's "toot" value
 * @method string              getUsername()     Returns the current record's "username" value
 * @method string              getPassword()     Returns the current record's "password" value
 * @method integer             getBandwidthId()  Returns the current record's "bandwidth_id" value
 * @method string              getDescription()  Returns the current record's "description" value
 * @method integer             getPayment()      Returns the current record's "payment" value
 * @method boolean             getIsBlocked()    Returns the current record's "is_blocked" value
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method string              getNextAction()   Returns the current record's "next_action" value
 * @method datetime            getNextDate()     Returns the current record's "next_date" value
 * @method District            getDistrict()     Returns the current record's "District" value
 * @method Bandwidth           getBandwidth()    Returns the current record's "Bandwidth" value
 * @method User                getUser()         Returns the current record's "User" value
 * @method Doctrine_Collection getPhones()       Returns the current record's "Phones" collection
 * @method Doctrine_Collection getNextActions()  Returns the current record's "NextActions" collection
 * @method Doctrine_Collection getChangeLogs()   Returns the current record's "ChangeLogs" collection
 * @method Customer            setName()         Sets the current record's "name" value
 * @method Customer            setDistrictId()   Sets the current record's "district_id" value
 * @method Customer            setBair()         Sets the current record's "bair" value
 * @method Customer            setToot()         Sets the current record's "toot" value
 * @method Customer            setUsername()     Sets the current record's "username" value
 * @method Customer            setPassword()     Sets the current record's "password" value
 * @method Customer            setBandwidthId()  Sets the current record's "bandwidth_id" value
 * @method Customer            setDescription()  Sets the current record's "description" value
 * @method Customer            setPayment()      Sets the current record's "payment" value
 * @method Customer            setIsBlocked()    Sets the current record's "is_blocked" value
 * @method Customer            setUserId()       Sets the current record's "user_id" value
 * @method Customer            setNextAction()   Sets the current record's "next_action" value
 * @method Customer            setNextDate()     Sets the current record's "next_date" value
 * @method Customer            setDistrict()     Sets the current record's "District" value
 * @method Customer            setBandwidth()    Sets the current record's "Bandwidth" value
 * @method Customer            setUser()         Sets the current record's "User" value
 * @method Customer            setPhones()       Sets the current record's "Phones" collection
 * @method Customer            setNextActions()  Sets the current record's "NextActions" collection
 * @method Customer            setChangeLogs()   Sets the current record's "ChangeLogs" collection
 * 
 * @package    pppoe
 * @subpackage model
 * @author     Ariunbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('customer');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('district_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bair', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('toot', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('bandwidth_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('payment', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_blocked', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('next_action', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('next_date', 'datetime', null, array(
             'type' => 'datetime',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('District', array(
             'local' => 'district_id',
             'foreign' => 'id'));

        $this->hasOne('Bandwidth', array(
             'local' => 'bandwidth_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Phone as Phones', array(
             'local' => 'id',
             'foreign' => 'customer_id'));

        $this->hasMany('NextAction as NextActions', array(
             'local' => 'id',
             'foreign' => 'customer_id'));

        $this->hasMany('ChangeLog as ChangeLogs', array(
             'local' => 'id',
             'foreign' => 'object_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}