<?php

/**
 * BandwidthTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BandwidthTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object BandwidthTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('Bandwidth');
  }

  public static function getNewIp($id)
  {
    $bandwidth = self::getInstance()->find($id);
    if (!($bandwidth instanceof Bandwidth)) return false;
    
    $ips = explode('.', $bandwidth->getIpaddress());
    $ip = false;
    for ($i=1; $i<255; $i++){
      $n = Doctrine_Core::getTable('Radreply')->createQuery('rr')->where('rr.value LIKE ?', "$ips[0].$ips[1].$i.%")->count();
      if ($n < 255) {
        $replies = Doctrine_Core::getTable('Radreply')->createQuery('rr')->where('rr.value LIKE ?', "$ips[0].$ips[1].$i.%")->execute();
        $ip_addrs = array();
        foreach ($replies as $reply) {
          $ip_addrs[] = $reply->getValue();
        }
        for ($j=1; $j<255; $j++) {
          $ip = "$ips[0].$ips[1].$i.$j";
          if (!in_array($ip, $ip_addrs)) {
            $i = 255;
            $j = 255;
          }
        }
      }
    }
    
    return $ip;
  }

  public static function getSpeedArray()
  {
    $bandwidths = self::getInstance()->createQuery()->execute();
    $arr = array();
    foreach ($bandwidths as $b) {
      $arr[$b->getId()] = $b->getBandwidth();
    }
    return $arr;
  }
}